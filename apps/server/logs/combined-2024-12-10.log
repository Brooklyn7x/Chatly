{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 10:46:05"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 10:46:05"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 10:46:05"}
{"level":"warn","message":"Retrying database connection (1/3)","service":"DatabaseService","timestamp":"2024-12-10 10:46:05"}
{"error":"Server selection timed out after 5000 ms","level":"error","message":"MongoDB connection error:","service":"DatabaseService","stack":"MongoServerSelectionError: Server selection timed out after 5000 ms\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-10 10:46:05"}
{"error":"Server selection timed out after 5000 ms","level":"error","message":"MongoDB connection error:","service":"DatabaseService","stack":"MongoServerSelectionError: Server selection timed out after 5000 ms\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-10 10:46:05"}
{"error":"Server selection timed out after 5000 ms","level":"error","message":"MongoDB connection error:","service":"DatabaseService","stack":"MongoServerSelectionError: Server selection timed out after 5000 ms\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-10 10:46:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:46:13"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:46:13"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:46:13"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:46:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:46:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:46:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:47:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:47:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:47:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:51:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:51:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:51:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:51:28"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:51:28"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:51:28"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:29:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 10:51:57"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:29:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 10:54:46"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:29:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 10:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:57:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:57:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 10:57:59"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:29:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 10:58:11"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:29:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 10:59:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:01:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:01:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:01:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:04:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:05:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:06:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:06:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:06:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:06:33"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:06:33"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:06:33"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:07:09"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:07:09"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:07:09"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:07:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:07:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:07:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:08:36"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:29:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 11:08:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:13:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:28:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:28:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:28:20"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:31:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 11:28:37"}
{"error":"Cannot set headers after they are sent to the client","level":"error","message":"Registration error:","service":"AuthController","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (node:_http_outgoing:696:11)\n    at ServerResponse.header (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/express/lib/response.js:794:10)\n    at ServerResponse.send (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/express/lib/response.js:174:12)\n    at ServerResponse.json (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/express/lib/response.js:278:15)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:44:37)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:5:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 11:28:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:30:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:30:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:30:12"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:31:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 11:30:17"}
{"error":"Cannot set headers after they are sent to the client","level":"error","message":"Registration error:","service":"AuthController","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (node:_http_outgoing:696:11)\n    at ServerResponse.header (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/express/lib/response.js:794:10)\n    at ServerResponse.send (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/express/lib/response.js:174:12)\n    at ServerResponse.json (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/express/lib/response.js:278:15)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:44:37)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:5:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 11:30:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:33:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:33:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:33:22"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:30:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 11:33:22"}
{"error":"Cannot read properties of undefined (reading 'email')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'email')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:36:33)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:4:12)\n    at AuthService.register (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:33:16)\n    at AuthController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:30:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/auth.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 11:33:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:35:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:35:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:35:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:38:10"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:38:10"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:38:10"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:38:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:38:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:38:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:40:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:40:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:40:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:41:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:41:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:41:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:42:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:42:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:42:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:43:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:47"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:47"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:44:47"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:45:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:45:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 11:45:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:26:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:26:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:26:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:26:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:32:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:32:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:32:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:32:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:37:12"}
{"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:37:12"}
{"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:37:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:39:08"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:39:08"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:39:08"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:39:08"}
{"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:39:14"}
{"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:42:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:42:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:42:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:42:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:42:51"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:42:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:42:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:42:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:42:54"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:42:54"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:42:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:43:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:43:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:43:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:43:14"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:43:15"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:43:15"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:43:15"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:43:15"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:43:15"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:43:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:44:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:44:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:44:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:44:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:45:24"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:45:25"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:45:25"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:45:25"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:45:25"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:45:25"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:45:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:46:53"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:46:53"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:46:53"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:46:53"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:46:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:46:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:46:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:46:56"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:46:56"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:46:56"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:47:41"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:47:41"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:47:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:47:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:47:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:47:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:47:41"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:47:41"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:47:41"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:47:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:49:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:49:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:49:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:49:20"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:49:23"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:49:23"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:49:23"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:49:24"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:88:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-10 13:49:24"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:49:24"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:52:59"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:52:59"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:52:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:53:03"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:53:03"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:53:03"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 13:53:04"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 13:53:04"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 13:53:04"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 13:53:04"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:53:04"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:01"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:01"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:05"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:57:05"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:58:16"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 13:58:16"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 13:58:16"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 13:58:16"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:327:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 13:58:16"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:58:16"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:53"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:53"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:53"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 13:59:55"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 13:59:55"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 13:59:55"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 13:59:55"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 13:59:55"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 13:59:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:57"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 13:59:57"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 14:00:10"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:00:10"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:00:10"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 14:00:11"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 14:00:11"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 14:00:11"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:03"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:03"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:07"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:07"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:17"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:17"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:20"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:20"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:37"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:37"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:40"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:04:40"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 14:04:42"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:04:42"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:04:42"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 14:04:43"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 14:04:43"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:46:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-10 14:04:43"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:30"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:34"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:05:34"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"testuser"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-10 14:05:38"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:05:38"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:05:38"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 14:05:38"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)","timestamp":"2024-12-10 14:05:38"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:06:15"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:06:15"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:19"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:19"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:08:23"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:08:26"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:08:26"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:08:39"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:08:39"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:39"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:39"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:42"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:09:42"}
{"error":"Model user not registered","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:10:00"}
{"error":"Model user not registered","level":"error","message":"Error finding user by email:","service":"UserService","stack":"Error: Model user not registered\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:325:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:301:36)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:14:58)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-10 14:10:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:10"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:10"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:10"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:15"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:15"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:18"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:11:18"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:48"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:48"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:52"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:15:52"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:11"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:11"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:11"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:15"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:15"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:29"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:18:29"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:19:46"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:19:46"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:19:46"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:19:47"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:19:47"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:19:47"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:29"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:29"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:32"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:32"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:32"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:35"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:35"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:40"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:40"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:43"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:20:43"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:03"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:03"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:06"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:06"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:19"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:19"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:19"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:35"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:35"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:38"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:38"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:38"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:38"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:53"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:53"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:53"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:56"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:21:56"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:17"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:17"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:21"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:21"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:21"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:28"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:28"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:28"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:32"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:32"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:32"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:34"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:34"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:22:34"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:07"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:07"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:10"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:10"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:10"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:10"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:17"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:17"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:23"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:27"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:27"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:30"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:33"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:33"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:33"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:33"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:55"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:55"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:55"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:57"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:57"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:23:57"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:00"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:02"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:02"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:02"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:27"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:27"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:30"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:30"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:30"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:31"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:31"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:31"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:47"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:47"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:47"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:50"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:24:50"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:11"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:11"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:11"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:14"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:22"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:22"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:26"}
{"level":"info","message":"Models registered successfully","service":"DatabaseService","timestamp":"2024-12-10 14:25:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:31:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:31:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:31:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:31:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:34:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:34:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:34:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:34:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:38:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:38:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:38:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 14:38:57"}
{"error":"Cannot destructure property 'query' of 'options' as it is undefined.","level":"error","message":"Error searching users:","service":"UserService","stack":"TypeError: Cannot destructure property 'query' of 'options' as it is undefined.\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:176:25)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:4:12)\n    at UserService.searchUsers (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:174:16)\n    at UserController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:57:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 14:40:01"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 20:17:14"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 20:17:14"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 20:17:14"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-10 20:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:17:16"}
{"error":"Cannot destructure property 'query' of 'options' as it is undefined.","level":"error","message":"Error searching users:","service":"UserService","stack":"TypeError: Cannot destructure property 'query' of 'options' as it is undefined.\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:176:25)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:4:12)\n    at UserService.searchUsers (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:174:16)\n    at UserController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:57:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 20:18:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:29"}
{"error":"Cannot destructure property 'query' of 'options' as it is undefined.","level":"error","message":"Error searching users:","service":"UserService","stack":"TypeError: Cannot destructure property 'query' of 'options' as it is undefined.\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:176:25)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:4:12)\n    at UserService.searchUsers (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:174:16)\n    at UserController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:57:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 20:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:21:55"}
{"error":"Cannot destructure property 'query' of 'options' as it is undefined.","level":"error","message":"Error searching users:","service":"UserService","stack":"TypeError: Cannot destructure property 'query' of 'options' as it is undefined.\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:176:25)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:4:12)\n    at UserService.searchUsers (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:174:16)\n    at UserController.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:57:55)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/controllers/user.controller.js:8:71\n    at new Promise (<anonymous>)","timestamp":"2024-12-10 20:22:14"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:22:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:22:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:22:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-10 20:22:43"}
