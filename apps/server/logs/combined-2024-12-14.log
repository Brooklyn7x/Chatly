{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:06:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:08:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:11:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:14:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:16:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:19:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:20:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:21:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:22:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:24:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:26:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:28:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:31:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:32:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:33:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 11:34:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:34:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:12"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:18"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:37:50"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 11:37:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:38:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:39:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:43:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:29"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 11:51:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:07:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:08:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:10:17"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:45"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:16:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:16:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:19:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:24:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:26:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:27:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:28:59"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:29:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:30:23"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:31:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:32:02"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 12:33:06"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 14:49:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 14:49:52"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:32:54"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 15:53:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 15:53:01"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:19:53"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:20:03"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 16:34:51"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:08:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:09:23"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:12:57"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:12:58"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:18:26"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:00"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:22:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:22:20"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:23:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:24:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:24:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:24:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:24:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:24:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:26:42"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:27:08"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:27:08"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:28:07"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:28:41"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:28:41"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:02"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:30:09"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:30:09"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:30:16"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:24"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:30:25"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:30:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:30:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:31:50"}
{"error":"Schema hasn't been registered for model \"Users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"Users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:31:54"}
{"error":"Schema hasn't been registered for model \"Users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"Users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:31:54"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:34:24"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:35:10"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:35:10"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:35:10"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:35:10"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:35:10"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:35:10"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:35:10"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:35:10"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:36:22"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:22"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:22"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:22"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:22"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:36:22"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:36:22"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:36:22"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:36:36"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:36:42"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:42"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:42"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:36:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:36:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:36:43"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:36:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:36:46"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:19"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:37:21"}
{"body":{"email":"test@example.com","password":"securepassword123"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:38:19"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:38:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:38:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:38:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:38:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:38:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:38:43"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:38:43"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:38:43"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:39:55"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:39:57"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:39:57"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:39:57"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:39:57"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:39:57"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:39:57"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:39:57"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:39:57"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:40:09"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:09"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:09"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:09"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:09"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:40:09"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:40:09"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:40:09"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:40:25"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:40:31"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:40:33"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:33"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:33"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:33"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:40:33"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in users:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:40:33"}
{"error":"Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"users\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:40:33"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:40:33"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:41:02"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:41:04"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:04"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:04"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:04"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:04"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:41:04"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:41:04"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:41:04"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:41:29"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:29"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:29"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:30"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:41:30"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:41:30"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:41:30"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:41:30"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:42:05"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:42:06"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:42:06"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:42:06"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:42:07"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:42:07"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:42:07"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:42:07"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:42:07"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:43:22"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:43:54"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:43:54"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:43:54"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:43:55"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:112:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:110:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:43:55"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:43:55"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:88:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:86:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:43:55"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:43:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:45:48"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:45:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:45:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:45:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:45:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:45:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:45:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:45:56"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:45:56"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:51:39"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:51:39"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:51:39"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:51:40"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:51:40"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:51:40"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:51:40"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:51:40"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:53:39"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:53:44"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:53:44"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:53:44"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:53:44"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:53:44"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:53:44"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:53:44"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:53:44"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:54:27"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:54:27"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:54:27"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:54:28"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:54:28"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:54:28"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:54:28"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:54:28"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 17:54:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:06"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:55:10"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:55:10"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:55:10"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:55:11"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:55:11"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:55:11"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:55:11"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:55:11"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:55:56"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:57:12"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:12"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:12"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:12"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:12"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:12"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:12"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:57:12"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:57:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:53"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:57:53"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:57:54"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:54"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:54"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:55"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:57:55"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:55"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"body":{"email":"test1@example.com","password":"securepassword123","username":"testuser1"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:56"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:57:56"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:56"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:57:56"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:57:56"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:34"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 17:58:36"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 17:58:39"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:58:39"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:58:39"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:58:40"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 17:58:40"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:58:40"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 17:58:40"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 17:58:40"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:02:48"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:02:49"}
{"level":"info","message":"MongoDB disconnected","service":"DatabaseService","timestamp":"2024-12-14 18:05:15"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"level":"info","message":"MongoDB connected successfully","service":"DatabaseService","timestamp":"2024-12-14 18:05:27"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"DatabaseService","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:85:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:83:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:05:33"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"DatabaseService","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:05:33"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:48"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:48"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:05:55"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:06:13"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"DatabaseService","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:109:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:107:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:06:13"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB disconnected","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"level":"warn","message":"Retrying database connection (1/3)","service":"AuthController","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"error":"getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"AuthController","stack":"MongoServerSelectionError: getaddrinfo ENOTFOUND cluster0-shard-00-02.tgh3a.mongodb.net\n    at Topology.selectServer (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:303:38)\n    at async Topology._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:196:28)\n    at async Topology.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/sdam/topology.js:158:13)\n    at async topologyConnect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:223:17)\n    at async MongoClient._connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:236:13)\n    at async MongoClient.connect (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongodb/lib/mongo_client.js:161:13)\n    at async NativeConnection.createClient (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js:320:3)","timestamp":"2024-12-14 18:07:16"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:35"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:35"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:35"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:07:36"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:07:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:07:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:07:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:07:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:07:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:07:53"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:07:53"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:07:53"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:08:36"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:08:37"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:08:37"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:08:37"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:08:38"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:08:38"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:08:38"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:08:38"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:08:38"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:12:50"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:13:45"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:13:45"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:13:50"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:13:50"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:13:50"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:13:51"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:13:51"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:13:51"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:13:51"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:13:51"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:15:27"}
{"body":{"email":"test@example.com","password":"securepassword123","username":"shbham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:19:39"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:19:39"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:19:39"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:19:40"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:19:40"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:19:40"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:19:40"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:19:40"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:19:41"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:21:10"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:23:28"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:23:28"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:23:28"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:23:29"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:23:29"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:23:29"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:23:29"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:23:29"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:24:44"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:25:06"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:26:04"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:26:34"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:26:34"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:26:34"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:26:35"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:26:35"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:26:35"}
{"error":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:26:35"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:26:35"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:27:07"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:01"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:30:10"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:31:29"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:29"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:29"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:31:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:31:30"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:31:30"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:31:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:31:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:31:56"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:31:56"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:31:56"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"level":"info","message":"MongoDB connected successfully","service":"AuthController","timestamp":"2024-12-14 18:31:58"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"AuthController","timestamp":"2024-12-14 18:32:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:32:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:32:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:32:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:32:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:32:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"AuthController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:32:30"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"AuthController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:33:13"}
{"body":{},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 18:34:20"}
{"body":{},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 18:34:21"}
{"body":{"email":"shubham@gmail.com","passsword":"shubham1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 18:36:11"}
{"body":{"email":"shubham@gmail.com","passsword":"shubham1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 18:36:24"}
{"body":{"email":"shubham@gmail.com","passsword":"shubham1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 18:36:26"}
{"body":{"email":"shubham@gmail.com","password":"shubham1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 18:37:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:37:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:37:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:37:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 18:37:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:37:30"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 18:37:30"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"UserController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 18:37:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 18:47:39"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:02:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-14 19:18:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:18:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:51:01"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 19:51:13"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:51:13"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:51:13"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:51:13"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:51:13"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 19:51:13"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 19:51:13"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"UserController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 19:51:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:52:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 19:53:10"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 19:53:14"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:53:14"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:53:14"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:53:14"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 19:53:14"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 19:53:14"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating user:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:73:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:71:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:38:44)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:5:58)","timestamp":"2024-12-14 19:53:14"}
{"error":"Cannot read properties of undefined (reading 'id')","level":"error","message":"Register error:","service":"UserController","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at AuthService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:45:72)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/auth.service.js:5:58)","timestamp":"2024-12-14 19:53:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:22:28"}
{"body":{"email":"shubham@gmail.com","password":"shubham@1","username":"shubham"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-14 20:22:45"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 20:22:45"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 20:22:45"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 20:22:45"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 20:22:45"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in User:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 20:27:29"}
{"error":"Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding user by email:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"User\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:97:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:95:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:89:44)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-14 20:27:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:28:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-14 20:29:31"}
