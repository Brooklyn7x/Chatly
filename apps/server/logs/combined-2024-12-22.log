{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:16:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 00:38:09"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 09:34:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 09:34:40"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:23:41"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:38:04"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 11:53:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 12:06:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:10:26"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 13:45:05"}
{"error":"Reached the max retries per request limit (which is 20). Refer to \"maxRetriesPerRequest\" option for details.","level":"error","message":"Login error:","service":"UserController","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 20). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/ioredis/built/redis/event_handler.js:182:37)\n    at Object.onceWrapper (node:events:634:26)\n    at Socket.emit (node:events:519:28)\n    at TCP.<anonymous> (node:net:337:12)","timestamp":"2024-12-22 13:54:25"}
{"error":"Reached the max retries per request limit (which is 20). Refer to \"maxRetriesPerRequest\" option for details.","level":"error","message":"Login error:","service":"UserController","stack":"MaxRetriesPerRequestError: Reached the max retries per request limit (which is 20). Refer to \"maxRetriesPerRequest\" option for details.\n    at Socket.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/ioredis/built/redis/event_handler.js:182:37)\n    at Object.onceWrapper (node:events:634:26)\n    at Socket.emit (node:events:519:28)\n    at TCP.<anonymous> (node:net:337:12)","timestamp":"2024-12-22 13:55:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:02:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:03:14"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:07:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:10:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:11:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:12:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:14:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:18:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:23:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:32:30"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 14:38:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 14:38:24"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 15:42:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 15:42:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:01:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:02:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:04:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:05:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:06:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:13:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:16:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:17:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:18:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:19:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:20:46"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 16:21:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:22:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:41:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 16:43:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:37:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:47"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:38:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:41:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:43:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 17:44:14"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 17:50:41"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 17:50:41"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:50:41"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:50:41"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:00"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:00"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 17:52:00"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 17:52:01"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 17:52:03"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 17:52:03"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:03"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:03"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:06"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:06"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 17:52:06"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 17:52:06"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 17:52:14"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 17:52:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:16"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:52:16"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 17:52:16"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 17:52:16"}
{"body":{"email":"brooklyn@gmail.com","password":"shubham@!","username":"brooklyn"},"level":"info","message":"Registration request received:","service":"UserController","timestamp":"2024-12-22 17:57:39"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 17:57:40"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 17:57:40"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:57:40"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:57:40"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:58:06"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:58:06"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 17:58:06"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 17:58:06"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 17:58:07"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 17:58:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:58:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 17:58:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:07:52"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:07:52"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:07:52"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:07:52"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:12:15"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:12:15"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:15"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:15"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:48"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:48"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:12:48"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:12:48"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:12:50"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:12:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:59"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:12:59"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:12:59"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:12:59"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:13:00"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:13:00"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:00"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:00"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:13:01"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:13:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:38"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:38"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:13:38"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:13:38"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:13:40"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:13:40"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:40"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:13:40"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:38"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:38"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:15:38"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:15:38"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:15:39"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:15:39"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:39"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:39"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:43"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:43"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:15:43"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:15:43"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:15:58"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:15:58"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:58"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:15:58"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:16:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:16:28"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:16:28"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:16:28"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:16:29"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:16:29"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:16:29"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:16:29"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:16:32"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:16:32"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:16:32"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:16:32"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:18:04"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:18:04"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:18:04"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:18:04"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:18:06"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:18:06"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:18:06"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:18:06"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:24:22"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:24:22"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:24:22"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:24:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:24:26"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:26:05"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:26:05"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:05"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:05"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:05"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:05"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:26:05"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:26:05"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:26:14"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:26:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:16"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:16"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:26:16"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:26:16"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:26:47"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:26:47"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:47"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:47"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:48"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:26:48"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:26:48"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:26:48"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:28:20"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:28:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:28:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:28:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:28:30"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:28:30"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:28:30"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:28:30"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:28:31"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 18:28:31"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:28:31"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:28:31"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:29:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:29:07"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:29:07"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:29:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:31:02"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:31:02"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:31:02"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 18:31:02"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:39:43"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:39:43"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:39:43"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:39:43"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:42:00"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:42:00"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:42:00"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 18:42:00"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:42:25"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:42:25"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:42:25"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:42:25"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:51:43"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:52:16"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:52:16"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:52:16"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:52:16"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:33"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 18:52:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:52:38"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:53:01"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:53:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:53:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:53:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:53:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:52"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:54:53"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:54:53"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:54:53"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:54:53"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:54:55"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:54:55"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:54:55"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:54:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:54:58"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:55:10"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:55:10"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:55:10"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:55:10"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:55:12"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:55:12"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:55:12"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:55:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:15"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:55:27"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:55:27"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:55:27"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:55:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:55:30"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:56:01"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:56:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:56:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:56:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:03"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:56:53"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:56:53"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:56:53"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:56:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:56:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:04"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:58:07"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:58:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:58:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:58:07"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:58:15"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:58:15"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:58:15"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:58:15"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:58:18"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 18:58:18"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:58:18"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 18:58:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 18:58:22"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:18:13"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:18:13"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:18:13"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:18:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:18:14"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:03"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:03"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:03"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:03"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:08"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:08"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:08"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:08"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:11"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:13"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:13"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:13"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:15"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:21"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:20:21"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:21"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:20:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:20:23"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:21:48"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:21:48"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:21:48"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:21:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:21:59"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:22:01"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:22:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:22:01"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:22:01"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:23:55"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:23:55"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:23:55"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:23:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:23:58"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:24:02"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:24:02"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:24:02"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:24:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:05"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:24:55"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:24:55"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:24:55"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:24:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:24:56"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:29:28"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:29:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:29:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:29:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:29:31"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:30:58"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:30:58"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:30:58"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:30:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:30:59"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:14"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:14"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:18"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:18"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:18"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:21"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:23"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:23"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:23"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:23"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:24"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:24"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:24"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:24"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:26"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:26"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:26"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:26"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:28"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:32:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:32:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:32:30"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:34:59"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:34:59"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:34:59"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:34:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:03"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:35:11"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:35:11"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:35:11"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:35:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:35:12"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 19:36:07"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 19:36:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:36:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:36:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:36:09"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:36:09"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 19:36:09"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 19:36:09"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:40:28"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 19:40:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:40:28"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 19:40:28"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:40:29"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:48:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:50:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:51:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:54:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:56:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:57:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 19:58:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:00:12"}
{"level":"info","message":"Creating conversation:","metadata":{"description":"One-on-one conversation for project discussion","isArchived":false,"isPinned":false,"title":"Direct Chat with Alice"},"participantIds":["676805bbd6c4a00ce92fe11f"],"service":"UserController","timestamp":"2024-12-22 20:00:20","type":"direct"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:00:20"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:00:20"}
{"error":"Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:00:20"}
{"error":"Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:00:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:05:56"}
{"level":"info","message":"Creating conversation:","metadata":{"description":"One-on-one conversation for project discussion","isArchived":false,"isPinned":false,"title":"Direct Chat with Alice"},"participantIds":["676805bbd6c4a00ce92fe11f"],"service":"UserController","timestamp":"2024-12-22 20:08:16","type":"direct"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:08:16"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:08:16"}
{"error":"Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:08:16"}
{"error":"Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:08:16"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:08:46"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:12:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:13:32"}
{"level":"info","message":"Creating conversation:","metadata":{"description":"One-on-one conversation for project discussion","isArchived":false,"isPinned":false,"title":"Direct Chat with Alice"},"participantIds":["676805bbd6c4a00ce92fe11f"],"service":"UserController","timestamp":"2024-12-22 20:14:21","type":"direct"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:14:21"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:14:21"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:14:21"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:14:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"Creating conversation:","metadata":{"description":"One-on-one conversation for project discussion","isArchived":false,"isPinned":false,"title":"Direct Chat with Alice"},"participantIds":["676805bbd6c4a00ce92fe11f"],"service":"UserController","timestamp":"2024-12-22 20:15:01","type":"direct"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:15:01"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:170:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:15:01"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:15:01"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:15:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:16:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:19:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:20:51"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:21:01"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:21:01"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:21:01"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:21:01"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:13"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:26:24"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:26:24"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:26:24"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:26:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:26:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:27:06"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:37"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:37"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:37"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:37"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:38"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:39"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:27:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:28:00"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:28:11"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:28:11"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:28:11"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:28:11"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:31:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:35:27"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:35:30"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:35:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:35:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:35:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:41:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:42:53"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:44:19"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:168:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:45:27"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:168:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:45:27"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:45:27"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:45:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:49:31"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:165:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:50:18"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:165:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:50:18"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:47:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:50:18"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:47:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:50:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:52:21"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:54:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:04"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:55:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 20:58:03"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:58:17"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:169:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 20:58:17"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:58:17"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:58)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 20:58:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:12"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:39"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:02:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:03:49"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:58"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:04:59"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:05:00"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:05:00"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:05:00"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:05:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:05:34"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:06:34"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:06:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:06:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:06:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:10:31"}
{"level":"error","message":"Invalid participants:","service":"UserController","timestamp":"2024-12-22 21:11:41"}
{"error":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"","level":"error","message":"Error finding document by ID in user:","service":"UserController","stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"\n    at SchemaObjectId.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schema/objectId.js:250:11)\n    at SchemaType.applySetters (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1236:12)\n    at SchemaType.castForQuery (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1653:17)\n    at cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/cast.js:390:32)\n    at Query.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4908:12)\n    at Query._castConditions (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2302:10)\n    at model.Query._findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2626:8)\n    at model.Query.exec (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4449:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-22 21:12:26"}
{"error":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"","level":"error","message":"Error finding document by ID in user:","service":"UserController","stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"\n    at SchemaObjectId.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schema/objectId.js:250:11)\n    at SchemaType.applySetters (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1236:12)\n    at SchemaType.castForQuery (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1653:17)\n    at cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/cast.js:390:32)\n    at Query.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4908:12)\n    at Query._castConditions (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2302:10)\n    at model.Query._findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2626:8)\n    at model.Query.exec (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4449:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-22 21:12:26"}
{"error":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"","level":"error","message":"Error fetching user:","service":"UserController","stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"\n    at SchemaObjectId.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schema/objectId.js:250:11)\n    at SchemaType.applySetters (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1236:12)\n    at SchemaType.castForQuery (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1653:17)\n    at cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/cast.js:390:32)\n    at Query.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4908:12)\n    at Query._castConditions (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2302:10)\n    at model.Query._findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2626:8)\n    at model.Query.exec (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4449:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-22 21:12:26"}
{"error":"Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"","level":"error","message":"Error fetching user:","service":"UserController","stack":"CastError: Cast to ObjectId failed for value \"\" (type string) at path \"_id\" for model \"user\"\n    at SchemaObjectId.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schema/objectId.js:250:11)\n    at SchemaType.applySetters (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1236:12)\n    at SchemaType.castForQuery (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/schemaType.js:1653:17)\n    at cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/cast.js:390:32)\n    at Query.cast (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4908:12)\n    at Query._castConditions (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2302:10)\n    at model.Query._findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:2626:8)\n    at model.Query.exec (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/query.js:4449:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-12-22 21:12:26"}
{"level":"error","message":"Invalid participants:","service":"UserController","timestamp":"2024-12-22 21:12:26"}
{"level":"error","message":"Invalid participants:","service":"UserController","timestamp":"2024-12-22 21:12:47"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:13:17"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:13:17"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:13:17"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:13:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:14:05"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:14:09"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:14:09"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:14:09"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:14:09"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:17:40"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"level":"warn","message":"Retrying database connection (1/3)","service":"UserController","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"error":"querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:15"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB disconnected","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"level":"warn","message":"Retrying database connection (2/3)","service":"UserController","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"error":"queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net","level":"error","message":"MongoDB connection error:","service":"UserController","stack":"Error: queryTxt ETIMEOUT cluster0.tgh3a.mongodb.net\n    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:275:17)","timestamp":"2024-12-22 21:21:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:22:06"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:22:06"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:22:06"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:22:06"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:50:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:22:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:23:45"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:174:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:23:48"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:174:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:23:48"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:23:48"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:23:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:25:22"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:25:56"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:173:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:25:56"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:25:56"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:51:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:25:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:26:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:30:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:174:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:30:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:174:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:30:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:30:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:30:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:174:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:37:00"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:174:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:37:00"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:37:00"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:52:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:37:00"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:42:20"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:42:23"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:42:23"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:42:23"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:42:23"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:44:58"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:44:58"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:44:58"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:44:58"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:48:22"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:48:22"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:48:22"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:48:22"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:49:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:49:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:49:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:49:30"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:49:31"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:49:31"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:49:31"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:49:31"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:49:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:49:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:49:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:49:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:50:29"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:50:29"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:50:29"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:50:29"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:50:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:175:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:50:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:50:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:53:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:50:36"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 21:53:35"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:53:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:53:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:53:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:53:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:10"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:10"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:10"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:10"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:11"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:11"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:11"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:11"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:12"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:12"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:12"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:12"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:36"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:41"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:184:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 21:54:41"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:41"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:62:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 21:54:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:12:34"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:13:45"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:13:45"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:13:45"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:13:45"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:14:26"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:14:26"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:14:26"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:14:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:15:14"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:15:54"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:15:54"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:15:54"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:15:54"}
{"level":"error","message":"Invalid participants:","service":"UserController","timestamp":"2024-12-22 22:17:08"}
{"level":"error","message":"Invalid participants:","service":"UserController","timestamp":"2024-12-22 22:19:38"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:20:12"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:20:12"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:20:12"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:20:12"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:20:32"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:20:32"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:20:32"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:20:32"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:20:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:20:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:20:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:20:51"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:23:20"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:23:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:23:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:23:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:24"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:23:48"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:23:48"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:23:48"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:23:48"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:23:50"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:23:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:23:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:23:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:23:52"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:18"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:18"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:18"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:18"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:20"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:20"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:23"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:38"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:38"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:38"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:38"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:41"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:51"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:24:51"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:51"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:24:51"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:24:52"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:24:53"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:24:53"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:24:53"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:24:53"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:27:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:27:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:27:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:27:51"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:29:03"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:141:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:29:03"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:29:03"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:60:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:29:03"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:29:27"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:29:27"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:29:27"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:29:27"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:30"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:29:34"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:29:34"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:29:34"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:29:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:37"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:29:42"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:29:42"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:29:42"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:29:42"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:29:45"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:30:06"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:30:06"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:30:06"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:30:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:30:07"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:30:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:30:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:30:13"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:30:13"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:33:24"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:33:24"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:33:24"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:33:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:26"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:33:54"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:33:54"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:33:54"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:33:54"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:33:56"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:34:24"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:34:24"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:34:24"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:34:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:34:26"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:35:17"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:35:17"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:35:17"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:35:17"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:20"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:35:22"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:35:22"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:35:22"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:35:22"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:35:24"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:35:44"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding direct conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:142:60)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:8:71","timestamp":"2024-12-22 22:35:44"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating document in Conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:35:44"}
{"error":"Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)","level":"error","message":"Error creating conversation:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"Conversation\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:74:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.create (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:72:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:61:46)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 22:35:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:41:10"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:42:54"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:42:54"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:42:54"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:42:54"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:46:29"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:46:29"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:46:29"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:46:29"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:46:31"}
{"level":"info","message":"Socket Connection Attempt: 676805bbd6c4a00ce92fe11f","service":"UserController","timestamp":"2024-12-22 22:46:31"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:46:31"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:46:31"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:46:34"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:51:07"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 22:51:07"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 22:51:07"}
{"level":"info","message":"User 676805bbd6c4a00ce92fe11f disconnected","service":"UserController","timestamp":"2024-12-22 22:51:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:54:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:33"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:50"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:57:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 22:58:06"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:94:52)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 23:03:18"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:06:41"}
{"error":"Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)","level":"error","message":"Error finding document in conversations:","service":"UserController","stack":"MissingSchemaError: Schema hasn't been registered for model \"conversations\".\nUse mongoose.model(name, schema)\n    at Mongoose.model (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/node_modules/mongoose/lib/mongoose.js:575:13)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:98:50)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findOne (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:96:16)\n    at ConversationService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:94:52)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/conversation.service.js:5:58)","timestamp":"2024-12-22 23:06:41"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:20"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:07:37"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:24"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:08:43"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:02"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:13:40"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:14:48"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:16:35"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:44"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:18:55"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:22:07"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:23:34"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:28:52"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:30:59"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:40:05"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"MongoDB connected successfully","service":"UserController","timestamp":"2024-12-22 23:46:57"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 23:47:50"}
{"level":"info","message":"Socket Connection Attempt: 67652b3b8ba9502dcaa3875b","service":"UserController","timestamp":"2024-12-22 23:47:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 23:47:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 23:47:50"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 23:47:53"}
{"error":"Model user not found","level":"error","message":"Error updating user status:","service":"UserController","stack":"Error: Model user not found\n    at DatabaseService.getModel (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:212:19)\n    at DatabaseService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:158:36)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:4:12)\n    at DatabaseService.findByIdAndUpdate (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/database.service.js:156:16)\n    at UserService.<anonymous> (/Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:152:29)\n    at Generator.next (<anonymous>)\n    at /Users/brooklyn/Desktop/my_project/chat-app/chat-app/apps/server/dist/services/user.service.js:8:71","timestamp":"2024-12-22 23:47:53"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 23:47:53"}
{"level":"info","message":"User 67652b3b8ba9502dcaa3875b disconnected","service":"UserController","timestamp":"2024-12-22 23:47:53"}
